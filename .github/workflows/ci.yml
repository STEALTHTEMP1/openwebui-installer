name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Install Qt packages
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          qtbase5-dev \
          qt5-qmake \
          xvfb \
          libegl1 \
          libegl-mesa0 \
          libgl1-mesa-dev \
          libgl1-mesa-dri \
          libglib2.0-0 \
          libsm6 \
          libxext6 \
          libxkbcommon-x11-0 \
          libxrender1 \
          libxcb-xinerama0

    - name: Start Xvfb
      if: runner.os == 'Linux'
      run: |
        sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        
    - name: Run tests
      run: |
        export DISPLAY=:99
        export QT_QPA_PLATFORM=offscreen
        pytest tests/ --cov=openwebui_installer --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Check formatting
      run: |
        black --check .
        isort --check-only --diff .
        
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics 