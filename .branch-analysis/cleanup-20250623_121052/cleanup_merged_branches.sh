#!/bin/bash

# Automated Branch Cleanup Script
# Generated by branch_cleanup_assessment.sh

set -euo pipefail

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "üßπ Branch Cleanup - OpenWebUI Installer"
echo "========================================"

# Safety check
read -p "‚ö†Ô∏è  This will DELETE merged branches. Continue? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Cleanup cancelled"
    exit 1
fi

# Create backup
BACKUP_DIR=".branch-analysis/backups/$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"

echo "üíæ Creating backup of branch information..."
git branch -r > "$BACKUP_DIR/remote_branches.txt"
git branch > "$BACKUP_DIR/local_branches.txt"

DELETED_COUNT=0
FAILED_COUNT=0
FAILED_BRANCHES=()

# Branches to delete (merged and safe)
BRANCHES_TO_DELETE=(
    "4vi6qj-codex/add-github-actions-for-pr-checks"
    "62zrdo-codex/update-formula-for-brew-upgrade"
    "codex/add-.flake8-or-setup.cfg-with-style-rules"
    "codex/add-bandit-security-scan-to-ci-workflow"
    "codex/add-cask-or-update-formula-for-upgrade"
    "codex/add-cli-methods-and-update-tests"
    "codex/add-context-manager-and-close-method"
    "codex/add-github-actions-for-pr-checks"
    "codex/add-gui-tests-with-pytest.mark.gui"
    "codex/add-import-checks-and-xfail-for-missing-dependencies"
    "codex/add-newline-to-__init__.py"
    "codex/add-paths-ignore-for-docs-in-ci.yml"
    "codex/add-private-helper-functions-in-installer.py"
    "codex/add-qt-installation-and-xvfb-to-ci-workflow"
    "codex/add-set--euo-pipefail-to-scripts"
    "codex/add-start,-stop,-restart-methods-to-installer"
    "codex/align-ci-scripts-with-app-store-approach"
    "codex/append-newline-and-run-format-tools"
    "codex/append-newline-to-requirements.txt"
    "codex/bump-python_version-in-pyproject.toml-to-3.9"
    "codex/create-.env.example-and-update-readme"
    "codex/create-codex-setup.sh-script"
    "codex/create-docker-compose.prod.yml-and-update-docs"
    "codex/create-dockerfile.docs-or-remove-docs-service"
    "codex/create-helm-chart-for-open-webui"
    "codex/create-network-diagnostics-script"
    "codex/create-production-monitoring-with-prometheus-and-grafana"
    "codex/define-universal-container-app-store-features"
    "codex/edit-feature_request.md-for-macos-checkbox"
    "codex/edit-readme.md-closing-instructions"
    "codex/enhance-_check_system_requirements-and-cli"
    "codex/enhance-release-workflow-for-macos-dmg"
    "codex/evaluate-and-refactor-install.py-script"
    "codex/expand-integration-tests-and-add-cleanup"
    "codex/extend-_check_system_requirements-for-linux"
    "codex/extend-ci-workflow-to-run-security-scanners"
    "codex/extend-installer-with-container-management-commands"
    "codex/extend-installer-with-container-management-methods"
    "codex/implement-and-document-secret-management"
    "codex/implement-macos-autostart-feature"
    "codex/implement-or-remove-cli-commands-in-openwebui_installer"
    "codex/implement-start,-stop,-and-update-commands"
    "codex/initialize-macos-project-setup"
    "codex/integrate-logging-module-and-add-cli-command"
    "codex/modify-installer-to-use-environment-variables"
    "codex/prototype-download-on-demand-logic"
    "codex/push-container-image-to-ghcr-and-update-documentation"
    "codex/refactor-install.py-and-update-documentation"
    "codex/refactor-settext-to-use-joined-string"
    "codex/relocate-shutil-import-and-clean-up-imports"
    "codex/remove-unused-directories-and-update-.gitignore"
    "codex/replace-placeholder-commands-in-install.py"
    "codex/set-up-container-registry-and-ci-workflow"
    "codex/support-podman-as-alternative-runtime"
    "codex/update-ci-and-dev-setup-instructions"
    "codex/update-formula-for-brew-upgrade"
    "codex/update-mypy-python_version-to-3.9"
    "codex/update-mypy-target-to-python-3.9"
    "codex/update-readme-and-prd-with-new-vision"
    "codex/update-readme-with-docker-compose-instructions"
    "codex/update-target-version-to-py39"
    "codex/write-specification-for-test-suite-updates"
    "feature/submodule-updates-and-fixes"
    "l1s0i9-codex/bump-python_version-in-pyproject.toml-to-3.9"
    "vdr22e-codex/add-qt-installation-and-xvfb-to-ci-workflow"
)

echo "üóëÔ∏è  Deleting merged branches..."
for branch in "${BRANCHES_TO_DELETE[@]}"; do
    echo "Deleting: $branch"

    # Delete remote branch
    if git push origin --delete "$branch" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Deleted remote: $branch${NC}"
        DELETED_COUNT=$((DELETED_COUNT + 1))
    else
        echo -e "${RED}‚ùå Failed to delete remote: $branch${NC}"
        FAILED_COUNT=$((FAILED_COUNT + 1))
        FAILED_BRANCHES+=("$branch")
    fi

    # Delete local branch if it exists
    if git show-ref --verify --quiet "refs/heads/$branch" 2>/dev/null; then
        if git branch -D "$branch" 2>/dev/null; then
            echo -e "${GREEN}‚úÖ Deleted local: $branch${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  Could not delete local: $branch${NC}"
        fi
    fi
done

echo ""
echo "üìä Cleanup Summary:"
echo "=================="
echo -e "‚úÖ Successfully deleted: ${GREEN}$DELETED_COUNT${NC}"
echo -e "‚ùå Failed to delete: ${RED}$FAILED_COUNT${NC}"

if [[ ${#FAILED_BRANCHES[@]} -gt 0 ]]; then
    echo ""
    echo "Failed branches:"
    for branch in "${FAILED_BRANCHES[@]}"; do
        echo "  - $branch"
    done
fi

echo ""
echo -e "${BLUE}üíæ Backup saved to: $BACKUP_DIR${NC}"
echo -e "${GREEN}üéâ Branch cleanup complete!${NC}"
